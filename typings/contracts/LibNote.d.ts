/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface LibNoteInterface extends Interface {
  functions: {};

  events: {
    LogNote: TypedEventDescription<{
      encodeTopics([sig, usr, arg1, arg2, data]: [
        Arrayish | null,
        string | null,
        Arrayish | null,
        null,
        null
      ]): string[];
    }>;
  };
}

export class LibNote extends Contract {
  connect(signerOrProvider: Signer | Provider | string): LibNote;
  attach(addressOrName: string): LibNote;
  deployed(): Promise<LibNote>;

  on(event: EventFilter | string, listener: Listener): LibNote;
  once(event: EventFilter | string, listener: Listener): LibNote;
  addListener(eventName: EventFilter | string, listener: Listener): LibNote;
  removeAllListeners(eventName: EventFilter | string): LibNote;
  removeListener(eventName: any, listener: Listener): LibNote;

  interface: LibNoteInterface;

  functions: {};

  filters: {
    LogNote(
      sig: Arrayish | null,
      usr: string | null,
      arg1: Arrayish | null,
      arg2: null,
      data: null
    ): EventFilter;
  };

  estimate: {};
}
