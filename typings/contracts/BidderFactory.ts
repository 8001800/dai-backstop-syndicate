/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { BigNumberish } from "ethers/utils";

import { Bidder } from "./Bidder";

export class BidderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(auctionAddress_: string, auctionID_: BigNumberish): Promise<Bidder> {
    return super.deploy(auctionAddress_, auctionID_) as Promise<Bidder>;
  }
  getDeployTransaction(
    auctionAddress_: string,
    auctionID_: BigNumberish
  ): UnsignedTransaction {
    return super.getDeployTransaction(auctionAddress_, auctionID_);
  }
  attach(address: string): Bidder {
    return super.attach(address) as Bidder;
  }
  connect(signer: Signer): BidderFactory {
    return super.connect(signer) as BidderFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bidder {
    return new Contract(address, _abi, signerOrProvider) as Bidder;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "auctionAddress_",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "auctionID_",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    constant: true,
    inputs: [],
    name: "auctionID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "bidSubmited",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "expectedLot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getAuctionInformation",
    outputs: [
      {
        internalType: "uint256",
        name: "bidIncrement",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "repriceIncrement",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "bidDuration",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "auctionDuration",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "auctionID",
        type: "uint256"
      }
    ],
    name: "getCurrentBid",
    outputs: [
      {
        internalType: "uint256",
        name: "amountDAI",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amountMKR",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address"
      },
      {
        internalType: "uint48",
        name: "bidDeadline",
        type: "uint48"
      },
      {
        internalType: "uint48",
        name: "auctionDeadline",
        type: "uint48"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getDaiAddress",
    outputs: [
      {
        internalType: "address",
        name: "dai",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getFlopperAddress",
    outputs: [
      {
        internalType: "address",
        name: "flopper",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getMKRAddress",
    outputs: [
      {
        internalType: "address",
        name: "mkr",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getTotalNumberOfAuctions",
    outputs: [
      {
        internalType: "uint256",
        name: "auctionID",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "isEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "submitBid",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "finalize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d22380380610d228339818101604052604081101561003357600080fd5b508051602090910151600080546001600160a01b039093166001600160a01b0319938416179055600180549092163317909155600255610caa806100786000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806379c8922b1161008c578063bafebc6f11610066578063bafebc6f14610184578063c334b6b21461018c578063c49c2eb614610196578063da4e364f1461019e576100cf565b806379c8922b1461016c578063899ea091146101745780638da5cb5b1461017c576100cf565b80632d07091f146100d457806333187dbb146100ee5780633f1fc6781461011257806345a89214146101405780634bb278f3146101485780636aa633b614610164575b600080fd5b6100dc6101f9565b60408051918252519081900360200190f35b6100f66101ff565b604080516001600160a01b039092168252519081900360200190f35b61011a61027f565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6100f661046b565b6101506104ba565b604080519115158252519081900360200190f35b610150610827565b6100dc6108b8565b6101506108be565b6100f66108c7565b6100f66108d6565b6101946108e5565b005b6100dc610a5e565b6101bb600480360360208110156101b457600080fd5b5035610aad565b6040805195865260208601949094526001600160a01b039092168484015265ffffffffffff9081166060850152166080830152519081900360a00190f35b60025481565b60008060009054906101000a90046001600160a01b03166001600160a01b03166336569e776040518163ffffffff1660e01b815260040160206040518083038186803b15801561024e57600080fd5b505afa158015610262573d6000803e3d6000fd5b505050506040513d602081101561027857600080fd5b5051905090565b6000806000806000809054906101000a90046001600160a01b03166001600160a01b0316637d780d826040518163ffffffff1660e01b815260040160206040518083038186803b1580156102d257600080fd5b505afa1580156102e6573d6000803e3d6000fd5b505050506040513d60208110156102fc57600080fd5b5051600054604080516324d8499b60e21b815290516001600160a01b0390921691639361266c91600480820192602092909190829003018186803b15801561034357600080fd5b505afa158015610357573d6000803e3d6000fd5b505050506040513d602081101561036d57600080fd5b505160005460408051634e8b1dd560e01b815290516001600160a01b0390921691634e8b1dd591600480820192602092909190829003018186803b1580156103b457600080fd5b505afa1580156103c8573d6000803e3d6000fd5b505050506040513d60208110156103de57600080fd5b50516000546040805163cfc4af5560e01b815290516001600160a01b039092169163cfc4af5591600480820192602092909190829003018186803b15801561042557600080fd5b505afa158015610439573d6000803e3d6000fd5b505050506040513d602081101561044f57600080fd5b5051929791965065ffffffffffff908116955090911692509050565b60008060009054906101000a90046001600160a01b03166001600160a01b0316637bd2bea76040518163ffffffff1660e01b815260040160206040518083038186803b15801561024e57600080fd5b6001546000906001600160a01b0316331461051c576040805162461bcd60e51b815260206004820152601b60248201527f4269646465722f66696e616c697a653a206f776e6572206f6e6c790000000000604482015290519081900360640190fd5b60045460ff1661055d5760405162461bcd60e51b8152600401808060200182810382526026815260200180610c506026913960400191505060405180910390fd5b60008061056b600254610aad565b945050935050508065ffffffffffff1660001461059e576001600160a01b03821630141561059e5761059e600254610b52565b604080516370a0823160e01b81523060048201529051600091739f8f72aa9304c8b593d555f12ef6589cc3a579a2916370a0823191602480820192602092909190829003018186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d602081101561061d57600080fd5b505160408051633612d9a360e11b815230600482015290519192506000917335d1b3f3d7966a1dfe207aa4514c12a259a0492b91636c25b346916024808301926020929190829003018186803b15801561067657600080fd5b505afa15801561068a573d6000803e3d6000fd5b505050506040513d60208110156106a057600080fd5b50516003549091508210158215610794576001546040805163a9059cbb60e01b81526001600160a01b0390921660048301526024820185905251739f8f72aa9304c8b593d555f12ef6589cc3a579a29163a9059cbb9160448083019260209291908290030181600087803b15801561071757600080fd5b505af115801561072b573d6000803e3d6000fd5b505050506040513d602081101561074157600080fd5b5051610794576040805162461bcd60e51b815260206004820181905260248201527f4269646465722f66696e616c697a653a207472616e73666572206661696c6564604482015290519081900360640190fd5b811561081e576001546040805163bb35783b60e01b81523060048201526001600160a01b03909216602483015260448201849052517335d1b3f3d7966a1dfe207aa4514c12a259a0492b9163bb35783b91606480830192600092919082900301818387803b15801561080557600080fd5b505af1158015610819573d6000803e3d6000fd5b505050505b94505050505090565b60008060009054906101000a90046001600160a01b03166001600160a01b031663957aa58c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561087657600080fd5b505afa15801561088a573d6000803e3d6000fd5b505050506040513d60208110156108a057600080fd5b50516001146108b05760006108b3565b60015b905090565b60035481565b60045460ff1681565b6001546001600160a01b031681565b6000546001600160a01b031690565b6001546001600160a01b03163314610944576040805162461bcd60e51b815260206004820152601c60248201527f4269646465722f7375626d69744269643a206f776e6572206f6e6c7900000000604482015290519081900360640190fd5b60045460ff16156109865760405162461bcd60e51b8152600401808060200182810382526027815260200180610c296027913960400191505060405180910390fd5b6000610993600254610aad565b50505050905060646b033b2e3c9fd0803ce800000082816109b057fe5b04816109b857fe5b046003556001546040805163bb35783b60e01b81526001600160a01b03909216600483015230602483015260448201839052517335d1b3f3d7966a1dfe207aa4514c12a259a0492b9163bb35783b91606480830192600092919082900301818387803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b50505050610a4e60025460035483610bb5565b506004805460ff19166001179055565b60008060009054906101000a90046001600160a01b03166001600160a01b031663cfdd33026040518163ffffffff1660e01b815260040160206040518083038186803b15801561024e57600080fd5b6000805460408051634423c5f160e01b815260048101859052905183928392839283926001600160a01b031691634423c5f19160248083019260a0929190829003018186803b158015610aff57600080fd5b505afa158015610b13573d6000803e3d6000fd5b505050506040513d60a0811015610b2957600080fd5b508051602082015160408301516060840151608090940151929a91995097509195509350915050565b600080546040805163c959c42b60e01b81526004810185905290516001600160a01b039092169263c959c42b9260248084019382900301818387803b158015610b9a57600080fd5b505af1158015610bae573d6000803e3d6000fd5b5050505050565b6000805460408051632ff9d1c160e11b815260048101879052602481018690526044810185905290516001600160a01b0390921692635ff3a3829260648084019382900301818387803b158015610c0b57600080fd5b505af1158015610c1f573d6000803e3d6000fd5b5050505050505056fe4269646465722f7375626d69744269643a2062696420616c7265616479207375626d69747465644269646465722f66696e616c697a653a20426964206e6f7420796574207375626d6974746564a265627a7a723158206dbb5e0fe80962ade9557c1aec0a8fd5b8c9663fbb908a3880d884584c27c8b964736f6c63430005100032";
