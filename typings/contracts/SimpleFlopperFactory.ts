/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { SimpleFlopper } from "./SimpleFlopper";

export class SimpleFlopperFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(auction: string): Promise<SimpleFlopper> {
    return super.deploy(auction) as Promise<SimpleFlopper>;
  }
  getDeployTransaction(auction: string): UnsignedTransaction {
    return super.getDeployTransaction(auction);
  }
  attach(address: string): SimpleFlopper {
    return super.attach(address) as SimpleFlopper;
  }
  connect(signer: Signer): SimpleFlopperFactory {
    return super.connect(signer) as SimpleFlopperFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleFlopper {
    return new Contract(address, _abi, signerOrProvider) as SimpleFlopper;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "auction",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    constant: true,
    inputs: [],
    name: "isEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getTotalNumberOfAuctions",
    outputs: [
      {
        internalType: "uint256",
        name: "auctionID",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getMKRAddress",
    outputs: [
      {
        internalType: "address",
        name: "mkr",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getDaiAddress",
    outputs: [
      {
        internalType: "address",
        name: "dai",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getFlopperAddress",
    outputs: [
      {
        internalType: "address",
        name: "flopper",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getAuctionInformation",
    outputs: [
      {
        internalType: "uint256",
        name: "bidIncrement",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "repriceIncrement",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "bidDuration",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "auctionDuration",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "auctionID",
        type: "uint256"
      }
    ],
    name: "getCurrentBid",
    outputs: [
      {
        internalType: "uint256",
        name: "amountDAI",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amountMKR",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address"
      },
      {
        internalType: "uint48",
        name: "bidDeadline",
        type: "uint48"
      },
      {
        internalType: "uint48",
        name: "auctionDeadline",
        type: "uint48"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161065e38038061065e8339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556105f9806100656000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636aa633b61161005b5780636aa633b6146100dc578063bafebc6f146100f8578063c49c2eb614610100578063da4e364f1461011a5761007d565b806333187dbb146100825780633f1fc678146100a657806345a89214146100d4575b600080fd5b61008a610175565b604080516001600160a01b039092168252519081900360200190f35b6100ae6101f5565b604080519485526020850193909352838301919091526060830152519081900360800190f35b61008a6103e1565b6100e4610430565b604080519115158252519081900360200190f35b61008a6104c1565b6101086104d0565b60408051918252519081900360200190f35b6101376004803603602081101561013057600080fd5b503561051f565b6040805195865260208601949094526001600160a01b039092168484015265ffffffffffff9081166060850152166080830152519081900360a00190f35b60008060009054906101000a90046001600160a01b03166001600160a01b03166336569e776040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c457600080fd5b505afa1580156101d8573d6000803e3d6000fd5b505050506040513d60208110156101ee57600080fd5b5051905090565b6000806000806000809054906101000a90046001600160a01b03166001600160a01b0316637d780d826040518163ffffffff1660e01b815260040160206040518083038186803b15801561024857600080fd5b505afa15801561025c573d6000803e3d6000fd5b505050506040513d602081101561027257600080fd5b5051600054604080516324d8499b60e21b815290516001600160a01b0390921691639361266c91600480820192602092909190829003018186803b1580156102b957600080fd5b505afa1580156102cd573d6000803e3d6000fd5b505050506040513d60208110156102e357600080fd5b505160005460408051634e8b1dd560e01b815290516001600160a01b0390921691634e8b1dd591600480820192602092909190829003018186803b15801561032a57600080fd5b505afa15801561033e573d6000803e3d6000fd5b505050506040513d602081101561035457600080fd5b50516000546040805163cfc4af5560e01b815290516001600160a01b039092169163cfc4af5591600480820192602092909190829003018186803b15801561039b57600080fd5b505afa1580156103af573d6000803e3d6000fd5b505050506040513d60208110156103c557600080fd5b5051929791965065ffffffffffff908116955090911692509050565b60008060009054906101000a90046001600160a01b03166001600160a01b0316637bd2bea76040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c457600080fd5b60008060009054906101000a90046001600160a01b03166001600160a01b031663957aa58c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561047f57600080fd5b505afa158015610493573d6000803e3d6000fd5b505050506040513d60208110156104a957600080fd5b50516001146104b95760006104bc565b60015b905090565b6000546001600160a01b031690565b60008060009054906101000a90046001600160a01b03166001600160a01b031663cfdd33026040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c457600080fd5b6000805460408051634423c5f160e01b815260048101859052905183928392839283926001600160a01b031691634423c5f19160248083019260a0929190829003018186803b15801561057157600080fd5b505afa158015610585573d6000803e3d6000fd5b505050506040513d60a081101561059b57600080fd5b508051602082015160408301516060840151608090940151929a9199509750919550935091505056fea265627a7a723158201eba52248e760e5924379d7a33a9d89c61ba0a75d7cea3572db1eda7eb6fc8dc64736f6c63430005100032";
